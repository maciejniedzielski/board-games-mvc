@model BoardGames.ViewModels.LoginViewModel

@{
  ViewData["Title"] = "Login";
  Layout = "_AuthLayout";
}

<h1 class="mt-5 mb-5 text-white">
  Login
  <small class="text-muted">to your account</small>
</h1>

@if (!ViewData.ModelState.IsValid)
{
  <div class="alert alert-danger" role="alert">
    @Html.ValidationSummary(false, "Form is invalid. Please fix following errors and try again.")
  </div>
}

<div class="jumbotron">
  <form asp-controller="Auth" asp-action="Login" method="post">
    <input hidden type="text" asp-for="@Model.ReturnUrl" value="@ViewBag.ReturnUrl">
    <div class="form-group">
      <label for="Name">Email:</label>
      <input type="text" asp-for="@Model.Email" id="Email" class="form-control" placeholder="Enter email">
      <span asp-validation-for="Email" class="text-danger ml-3"></span>
    </div>
    <div class="form-group">
      <label for="Name">Password:</label>
      <input type="password" asp-for="@Model.Password" id="Password" class="form-control" placeholder="Enter password">
      <span asp-validation-for="Password" class="text-danger ml-3"></span>
    </div>
    <div class="form-check">
      <input type="checkbox" class="form-check-input" asp-for="@Model.RememberMe" id="RememberMe">
      <label for="RememberMe" class="form-check-label">Remember me</label>
      <span asp-validation-for="RememberMe" class="text-danger ml-3"></span>
    </div>
    <div class="d-flex justify-content-center mt-4">
      <button class="btn btn-lg btn-primary" type="submit">Login</button>
    </div>
  </form>
</div>
