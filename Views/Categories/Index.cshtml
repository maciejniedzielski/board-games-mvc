@using BoardGames.ViewModels
@model List<Category>;
@{
  ViewData["Title"] = "Categories";
}

<div>
  @await Html.PartialAsync("~/Views/Shared/_IndexHeader.cshtml", new IndexHeaderViewModel("Categories"))


  <section class="text-center">
    <table class="table">
      <caption>List of categories</caption>
      <thead class="thead-dark">
      <tr>
        <th scope="col">No.</th>
        <th scope="col">Type</th>
        @if (User.IsInRole("Admin"))
        {
          <th scope="col">Action</th>
        }
      </tr>
      </thead>
      <tbody>
      @if (@Model.Count != 0)
      {
        @foreach (var (category, index) in Model.Select((v, i) => (v, i += 1)))
        {
          <tr>
            <th scope="row" class="align-middle">@index</th>
            <td class="align-middle">
              <a asp-area="" asp-controller="Categories" asp-action="Detail" asp-route-id="@category.Id">@category.Name</a>
            </td>
            @if (User.IsInRole("Admin"))
            {
              <td class="align-middle">
                <a asp-area="" asp-controller="Categories" asp-action="Edit" asp-route-id="@category.Id" class="btn btn-primary">
                  <span class="fas fa-edit"></span>
                </a>
                <a asp-area="" asp-controller="Categories" asp-action="Delete" asp-route-id="@category.Id" class="btn btn-danger">
                  <span class="fas fa-trash"></span>
                </a>
              </td>
            }
          </tr>
        }
      }
      else
      {
        <tr>
          <td class="text-center" colspan="7">No results found</td>
        </tr>
      }
      </tbody>
    </table>
  </section>
</div>